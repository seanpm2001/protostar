"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"legacy":[{"type":"link","label":"Introduction","href":"/protostar/docs/legacy/introduction","docId":"legacy/introduction"},{"type":"link","label":"Installation","href":"/protostar/docs/legacy/installation","docId":"legacy/installation"},{"type":"link","label":"Project initialization","href":"/protostar/docs/legacy/project-initialization","docId":"legacy/project-initialization"},{"type":"link","label":"Configuration file","href":"/protostar/docs/legacy/configuration-file","docId":"legacy/configuration-file"},{"type":"link","label":"Compilation","href":"/protostar/docs/legacy/compiling","docId":"legacy/compiling"},{"type":"link","label":"Dependencies","href":"/protostar/docs/legacy/dependency-management","docId":"legacy/dependency-management"},{"type":"category","label":"Testing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Deploying contracts from tests","href":"/protostar/docs/legacy/testing/deploying-contracts","docId":"legacy/testing/deploying-contracts"},{"type":"category","label":"Cheatcodes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"assume","href":"/protostar/docs/legacy/testing/cheatcodes/assume","docId":"legacy/testing/cheatcodes/assume"},{"type":"link","label":"declare","href":"/protostar/docs/legacy/testing/cheatcodes/declare","docId":"legacy/testing/cheatcodes/declare"},{"type":"link","label":"deploy_contract","href":"/protostar/docs/legacy/testing/cheatcodes/deploy-contract","docId":"legacy/testing/cheatcodes/deploy-contract"},{"type":"link","label":"deploy","href":"/protostar/docs/legacy/testing/cheatcodes/deploy","docId":"legacy/testing/cheatcodes/deploy"},{"type":"link","label":"example","href":"/protostar/docs/legacy/testing/cheatcodes/example","docId":"legacy/testing/cheatcodes/example"},{"type":"link","label":"expect_call","href":"/protostar/docs/legacy/testing/cheatcodes/expect-call","docId":"legacy/testing/cheatcodes/expect-call"},{"type":"link","label":"expect_events","href":"/protostar/docs/legacy/testing/cheatcodes/expect-events","docId":"legacy/testing/cheatcodes/expect-events"},{"type":"link","label":"expect_revert","href":"/protostar/docs/legacy/testing/cheatcodes/expect-revert","docId":"legacy/testing/cheatcodes/expect-revert"},{"type":"link","label":"given","href":"/protostar/docs/legacy/testing/cheatcodes/given","docId":"legacy/testing/cheatcodes/given"},{"type":"link","label":"load","href":"/protostar/docs/legacy/testing/cheatcodes/load","docId":"legacy/testing/cheatcodes/load"},{"type":"link","label":"max_examples","href":"/protostar/docs/legacy/testing/cheatcodes/max-examples","docId":"legacy/testing/cheatcodes/max-examples"},{"type":"link","label":"mock_call","href":"/protostar/docs/legacy/testing/cheatcodes/mock-call","docId":"legacy/testing/cheatcodes/mock-call"},{"type":"link","label":"prepare","href":"/protostar/docs/legacy/testing/cheatcodes/prepare","docId":"legacy/testing/cheatcodes/prepare"},{"type":"link","label":"reflect","href":"/protostar/docs/legacy/testing/cheatcodes/reflect","docId":"legacy/testing/cheatcodes/reflect"},{"type":"link","label":"reject","href":"/protostar/docs/legacy/testing/cheatcodes/reject","docId":"legacy/testing/cheatcodes/reject"},{"type":"link","label":"roll","href":"/protostar/docs/legacy/testing/cheatcodes/roll","docId":"legacy/testing/cheatcodes/roll"},{"type":"link","label":"send_message_to_l2","href":"/protostar/docs/legacy/testing/cheatcodes/send-message-to-l2","docId":"legacy/testing/cheatcodes/send-message-to-l2"},{"type":"link","label":"skip","href":"/protostar/docs/legacy/testing/cheatcodes/skip","docId":"legacy/testing/cheatcodes/skip"},{"type":"link","label":"start_prank","href":"/protostar/docs/legacy/testing/cheatcodes/start-prank","docId":"legacy/testing/cheatcodes/start-prank"},{"type":"link","label":"store","href":"/protostar/docs/legacy/testing/cheatcodes/store","docId":"legacy/testing/cheatcodes/store"},{"type":"link","label":"strategy","href":"/protostar/docs/legacy/testing/cheatcodes/strategy","docId":"legacy/testing/cheatcodes/strategy"},{"type":"link","label":"warp","href":"/protostar/docs/legacy/testing/cheatcodes/warp","docId":"legacy/testing/cheatcodes/warp"}],"href":"/protostar/docs/legacy/testing/cheatcodes/"},{"type":"category","label":"Fuzzing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Reproducing failures","href":"/protostar/docs/legacy/testing/fuzzing/reproducing-failures","docId":"legacy/testing/fuzzing/reproducing-failures"},{"type":"link","label":"Strategies","href":"/protostar/docs/legacy/testing/fuzzing/strategies","docId":"legacy/testing/fuzzing/strategies"}],"href":"/protostar/docs/legacy/testing/fuzzing/"},{"type":"link","label":"End-to-end tests","href":"/protostar/docs/legacy/testing/e2e","docId":"legacy/testing/e2e"}],"href":"/protostar/docs/legacy/testing/"},{"type":"category","label":"Interacting with Starknet","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Invoking contracts","href":"/protostar/docs/legacy/interacting-with-starknet/invoke","docId":"legacy/interacting-with-starknet/invoke"},{"type":"link","label":"Calling contracts","href":"/protostar/docs/legacy/interacting-with-starknet/call","docId":"legacy/interacting-with-starknet/call"},{"type":"link","label":"Declaring new contracts","href":"/protostar/docs/legacy/interacting-with-starknet/declare-cairo0","docId":"legacy/interacting-with-starknet/declare-cairo0"},{"type":"link","label":"Deploying new contracts","href":"/protostar/docs/legacy/interacting-with-starknet/deploy","docId":"legacy/interacting-with-starknet/deploy"},{"type":"link","label":"Creating account","href":"/protostar/docs/legacy/interacting-with-starknet/deploy-account","docId":"legacy/interacting-with-starknet/deploy-account"},{"type":"link","label":"Signing","href":"/protostar/docs/legacy/interacting-with-starknet/signing","docId":"legacy/interacting-with-starknet/signing"},{"type":"link","label":"Multicall","href":"/protostar/docs/legacy/interacting-with-starknet/multicall","docId":"legacy/interacting-with-starknet/multicall"},{"type":"link","label":"Scripting","href":"/protostar/docs/legacy/interacting-with-starknet/scripting","docId":"legacy/interacting-with-starknet/scripting"}],"href":"/protostar/docs/legacy/interacting-with-starknet/"},{"type":"link","label":"Migrations","href":"/protostar/docs/legacy/migrations/","docId":"legacy/migrations/README"},{"type":"link","label":"Formatting","href":"/protostar/docs/legacy/formatting","docId":"legacy/formatting"}],"cairo1":[{"type":"link","label":"Introduction","href":"/protostar/docs/cairo-1/introduction","docId":"cairo-1/introduction"},{"type":"link","label":"Installation","href":"/protostar/docs/cairo-1/installation","docId":"cairo-1/installation"},{"type":"link","label":"Project initialization","href":"/protostar/docs/cairo-1/project-initialization","docId":"cairo-1/project-initialization"},{"type":"link","label":"Understanding Cairo packages","href":"/protostar/docs/cairo-1/understanding-cairo-packages","docId":"cairo-1/understanding-cairo-packages"},{"type":"link","label":"Understanding protostar.toml","href":"/protostar/docs/cairo-1/protostar-toml","docId":"cairo-1/protostar-toml"},{"type":"category","label":"Testing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit testing","href":"/protostar/docs/cairo-1/testing/unit-testing","docId":"cairo-1/testing/unit-testing"},{"type":"link","label":"Integration testing","href":"/protostar/docs/cairo-1/testing/integration-testing","docId":"cairo-1/testing/integration-testing"},{"type":"link","label":"Cheatcodes","href":"/protostar/docs/cairo-1/testing/cheatcodes","docId":"cairo-1/testing/cheatcodes"},{"type":"link","label":"Gas","href":"/protostar/docs/cairo-1/testing/gas","docId":"cairo-1/testing/gas"},{"type":"link","label":"Debugging","href":"/protostar/docs/cairo-1/testing/debugging","docId":"cairo-1/testing/debugging"},{"type":"link","label":"End-to-end tests","href":"/protostar/docs/cairo-1/testing/e2e","docId":"cairo-1/testing/e2e"},{"type":"category","label":"Cheatcodes reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"call","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/call","docId":"cairo-1/testing/cheatcodes-reference/call"},{"type":"link","label":"declare_cairo0","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/declare-cairo0","docId":"cairo-1/testing/cheatcodes-reference/declare-cairo0"},{"type":"link","label":"declare","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/declare","docId":"cairo-1/testing/cheatcodes-reference/declare"},{"type":"link","label":"deploy","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/deploy","docId":"cairo-1/testing/cheatcodes-reference/deploy"},{"type":"link","label":"deploy_contract","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/deploy_contract","docId":"cairo-1/testing/cheatcodes-reference/deploy_contract"},{"type":"link","label":"deploy_contract_cairo0","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/deploy_contract_cairo0","docId":"cairo-1/testing/cheatcodes-reference/deploy_contract_cairo0"},{"type":"link","label":"invoke","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/invoke","docId":"cairo-1/testing/cheatcodes-reference/invoke"},{"type":"link","label":"prepare","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/prepare","docId":"cairo-1/testing/cheatcodes-reference/prepare"},{"type":"link","label":"start_prank","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/start_prank","docId":"cairo-1/testing/cheatcodes-reference/start_prank"},{"type":"link","label":"start_roll","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/start_roll","docId":"cairo-1/testing/cheatcodes-reference/start_roll"},{"type":"link","label":"start_spoof","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/start_spoof","docId":"cairo-1/testing/cheatcodes-reference/start_spoof"},{"type":"link","label":"start_warp","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/start_warp","docId":"cairo-1/testing/cheatcodes-reference/start_warp"},{"type":"link","label":"stop_prank","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/stop_prank","docId":"cairo-1/testing/cheatcodes-reference/stop_prank"},{"type":"link","label":"stop_roll","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/stop_roll","docId":"cairo-1/testing/cheatcodes-reference/stop_roll"},{"type":"link","label":"stop_spoof","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/stop_spoof","docId":"cairo-1/testing/cheatcodes-reference/stop_spoof"},{"type":"link","label":"stop_warp","href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/stop_warp","docId":"cairo-1/testing/cheatcodes-reference/stop_warp"}],"href":"/protostar/docs/cairo-1/testing/cheatcodes-reference/"}],"href":"/protostar/docs/cairo-1/testing/"},{"type":"category","label":"Interacting with Starknet","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Invoking contracts","href":"/protostar/docs/cairo-1/interacting-with-starknet/invoke","docId":"cairo-1/interacting-with-starknet/invoke"},{"type":"link","label":"Declaring new contracts","href":"/protostar/docs/cairo-1/interacting-with-starknet/declare","docId":"cairo-1/interacting-with-starknet/declare"},{"type":"link","label":"Deploying new contracts","href":"/protostar/docs/cairo-1/interacting-with-starknet/deploy","docId":"cairo-1/interacting-with-starknet/deploy"},{"type":"link","label":"Calling contracts","href":"/protostar/docs/cairo-1/interacting-with-starknet/call","docId":"cairo-1/interacting-with-starknet/call"},{"type":"link","label":"Creating an account","href":"/protostar/docs/cairo-1/interacting-with-starknet/deploy-account","docId":"cairo-1/interacting-with-starknet/deploy-account"},{"type":"link","label":"Multicall","href":"/protostar/docs/cairo-1/interacting-with-starknet/multicall","docId":"cairo-1/interacting-with-starknet/multicall"},{"type":"link","label":"Signing","href":"/protostar/docs/cairo-1/interacting-with-starknet/signing","docId":"cairo-1/interacting-with-starknet/signing"},{"type":"link","label":"Scripting","href":"/protostar/docs/cairo-1/interacting-with-starknet/scripting","docId":"cairo-1/interacting-with-starknet/scripting"},{"type":"link","label":"Compilation","href":"/protostar/docs/cairo-1/interacting-with-starknet/compiling","docId":"cairo-1/interacting-with-starknet/compiling"}],"href":"/protostar/docs/cairo-1/interacting-with-starknet/"}]},"docs":{"cairo-1/installation":{"id":"cairo-1/installation","title":"Installation","description":"Protostar is easy to install on Linux and Mac systems. In this section, we will walk through the process of installing and upgrading Protostar.","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/call":{"id":"cairo-1/interacting-with-starknet/call","title":"Calling contracts","description":"Overview","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/compiling":{"id":"cairo-1/interacting-with-starknet/compiling","title":"Compiling a Cairo 1 Project with Protostar","description":"To build your contracts, first define them in protostar.toml","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/declare":{"id":"cairo-1/interacting-with-starknet/declare","title":"Declaring new contracts","description":"Starknet provides a distinction between contract class and instance. This is similar to difference between writing the","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/deploy":{"id":"cairo-1/interacting-with-starknet/deploy","title":"Deploying new contracts","description":"Overview","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/deploy-account":{"id":"cairo-1/interacting-with-starknet/deploy-account","title":"Creating an account","description":"Overview","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/invoke":{"id":"cairo-1/interacting-with-starknet/invoke","title":"Invoking contracts","description":"Overview","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/multicall":{"id":"cairo-1/interacting-with-starknet/multicall","title":"Multicall","description":"Overview","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/README":{"id":"cairo-1/interacting-with-starknet/README","title":"README","description":"Interacting with Starknet","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/scripting":{"id":"cairo-1/interacting-with-starknet/scripting","title":"Scripting","description":"In order to automate a process that includes Protostar operations, you may want to build a script in the language of your","sidebar":"cairo1"},"cairo-1/interacting-with-starknet/signing":{"id":"cairo-1/interacting-with-starknet/signing","title":"Signing","description":"Protostar offers two ways of providing the signature:","sidebar":"cairo1"},"cairo-1/introduction":{"id":"cairo-1/introduction","title":"Introduction","description":"Protostar is a toolchain for developing Starknet smart contracts. It helps with writing, deploying, and testing your smart contracts.","sidebar":"cairo1"},"cairo-1/project-initialization":{"id":"cairo-1/project-initialization","title":"Project initialization","description":"Creating a project","sidebar":"cairo1"},"cairo-1/protostar-toml":{"id":"cairo-1/protostar-toml","title":"Understanding protostar.toml","description":"Protostar can be configured with file protostar.toml, which is located in the root of your project. The file uses","sidebar":"cairo1"},"cairo-1/testing/cheatcodes":{"id":"cairo-1/testing/cheatcodes","title":"Cheatcodes","description":"Often while testing your contract, you want to emulate complex scenarios. As an example, you might want to test how your contract behaves when not authorized contract calls it. Protostar lets you test such scenarios with cheatcodes. In this section, you will learn what cheatcodes are and how to use them to create strong tests for your contracts.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/call":{"id":"cairo-1/testing/cheatcodes-reference/call","title":"call","description":"Calls a deployed contract. Unlike invoke, it does not mutate the blockchain state.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/declare":{"id":"cairo-1/testing/cheatcodes-reference/declare","title":"declare","description":"Declares a contract given its name defined in the protostar.toml configuration","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/declare-cairo0":{"id":"cairo-1/testing/cheatcodes-reference/declare-cairo0","title":"declare_cairo0","description":"Declares a Cairo0 (old syntax) contract given a contract name defined in the protostar.toml configuration file.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/deploy":{"id":"cairo-1/testing/cheatcodes-reference/deploy","title":"deploy","description":"Deploys a prepared contract.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/deploy_contract":{"id":"cairo-1/testing/cheatcodes-reference/deploy_contract","title":"deploy_contract","description":"Declares and deploys a contract given its name defined in the protostar.toml","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/deploy_contract_cairo0":{"id":"cairo-1/testing/cheatcodes-reference/deploy_contract_cairo0","title":"deploy_contract_cairo0","description":"Declares and deploys a Cairo 0 contract given its name defined in the protostar.toml","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/invoke":{"id":"cairo-1/testing/cheatcodes-reference/invoke","title":"invoke","description":"Invokes a contract\'s function. function_name parameter should be provided as a short string. invoke can mutate the","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/prepare":{"id":"cairo-1/testing/cheatcodes-reference/prepare","title":"prepare","description":"Prepares contract for deployment.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/README":{"id":"cairo-1/testing/cheatcodes-reference/README","title":"Cheatcodes reference","description":"Some tests require specific setup beyond what is possible using standard flow. Protostar exposes","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/start_prank":{"id":"cairo-1/testing/cheatcodes-reference/start_prank","title":"start_prank","description":"Changes a caller address returned by getcalleraddress() for the targeted contract until the prank is stopped","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/start_roll":{"id":"cairo-1/testing/cheatcodes-reference/start_roll","title":"start_roll","description":"Sets a block number for a deployed contract, until stoproll is called.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/start_spoof":{"id":"cairo-1/testing/cheatcodes-reference/start_spoof","title":"start_spoof","description":"Changes TxInfo returned by gettxinfo() for the targeted contract until the spoof is stopped","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/start_warp":{"id":"cairo-1/testing/cheatcodes-reference/start_warp","title":"start_warp","description":"Sets a block timestamp for a deployed contract, until stopwarp is called.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/stop_prank":{"id":"cairo-1/testing/cheatcodes-reference/stop_prank","title":"stop_prank","description":"Stops a prank started by startprank.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/stop_roll":{"id":"cairo-1/testing/cheatcodes-reference/stop_roll","title":"stop_roll","description":"Stops a roll started by startroll.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/stop_spoof":{"id":"cairo-1/testing/cheatcodes-reference/stop_spoof","title":"stop_spoof","description":"Stops a spoof started by startspoof.","sidebar":"cairo1"},"cairo-1/testing/cheatcodes-reference/stop_warp":{"id":"cairo-1/testing/cheatcodes-reference/stop_warp","title":"stop_warp","description":"Stops a warp started by startwarp.","sidebar":"cairo1"},"cairo-1/testing/debugging":{"id":"cairo-1/testing/debugging","title":"Debugging","description":"Currently, Cairo does not support a debugging mechanism per se, but we can print variables\' values to the standard output.","sidebar":"cairo1"},"cairo-1/testing/e2e":{"id":"cairo-1/testing/e2e","title":"End-to-end tests","description":"There are three main levels of software testing: unit tests, integration tests, and end-to-end tests.","sidebar":"cairo1"},"cairo-1/testing/gas":{"id":"cairo-1/testing/gas","title":"Limiting gas","description":"To limit gas available in a test case you can use #[available_gas(x)] attribute, replacing x with the desired limit.","sidebar":"cairo1"},"cairo-1/testing/integration-testing":{"id":"cairo-1/testing/integration-testing","title":"Integration testing","description":"Using unit testing as much as possible is a good practice, as it makes your test suites run faster. However, when writing smart contracts you often want your test to cover the on-chain state and interactions between multiple contracts.","sidebar":"cairo1"},"cairo-1/testing/README":{"id":"cairo-1/testing/README","title":"Testing","description":"Protostar provides developers with a comprehensive testing environment. You can test your code using","sidebar":"cairo1"},"cairo-1/testing/unit-testing":{"id":"cairo-1/testing/unit-testing","title":"Unit testing","description":"Protostar lets you test standalone Cairo functions. This technique is referred to as unit testing. You should write as many unit tests as possible as these are much faster than integration tests.","sidebar":"cairo1"},"cairo-1/understanding-cairo-packages":{"id":"cairo-1/understanding-cairo-packages","title":"Understanding Cairo packages","description":"There are several requirements that Cairo packages have to follow. These are explained in the following sections.","sidebar":"cairo1"},"cli-reference":{"id":"cli-reference","title":"CLI Reference","description":"Common flags"},"legacy/compiling":{"id":"legacy/compiling","title":"Compiling a Project with Protostar","description":"Compiling Cairo 0 contracts is deprecated and will be removed in the future.","sidebar":"legacy"},"legacy/configuration-file":{"id":"legacy/configuration-file","title":"Configuration file","description":"Protostar can be configured with file protostar.toml, which is located in the root of your project. The file uses the TOML format and allows you to specify various options and settings for Protostar.","sidebar":"legacy"},"legacy/dependency-management":{"id":"legacy/dependency-management","title":"Dependencies","description":"Protostar uses git submodules to manage dependencies in your project. In order to manage dependencies with Protostar, you must have git installed on your system and have the git executable added to the PATH environment variable. The PATH variable is a list of directories that your system searches for executables.","sidebar":"legacy"},"legacy/formatting":{"id":"legacy/formatting","title":"Formatting","description":"Protostar comes with a built-in Cairo source code formatter.","sidebar":"legacy"},"legacy/installation":{"id":"legacy/installation","title":"Installation","description":"Protostar is easy to install on Linux and Mac systems. In this section, we will walk through the process of installing and upgrading Protostar.","sidebar":"legacy"},"legacy/interacting-with-starknet/call":{"id":"legacy/interacting-with-starknet/call","title":"Calling contracts","description":"Overview","sidebar":"legacy"},"legacy/interacting-with-starknet/declare-cairo0":{"id":"legacy/interacting-with-starknet/declare-cairo0","title":"Declaring new contracts","description":"This command can be used to declare Cairo 0 contracts only.","sidebar":"legacy"},"legacy/interacting-with-starknet/deploy":{"id":"legacy/interacting-with-starknet/deploy","title":"Deploying new contracts","description":"Overview","sidebar":"legacy"},"legacy/interacting-with-starknet/deploy-account":{"id":"legacy/interacting-with-starknet/deploy-account","title":"Creating account","description":"Overview","sidebar":"legacy"},"legacy/interacting-with-starknet/invoke":{"id":"legacy/interacting-with-starknet/invoke","title":"Invoking contracts","description":"Overview","sidebar":"legacy"},"legacy/interacting-with-starknet/multicall":{"id":"legacy/interacting-with-starknet/multicall","title":"Multicall","description":"Overview","sidebar":"legacy"},"legacy/interacting-with-starknet/README":{"id":"legacy/interacting-with-starknet/README","title":"README","description":"Interacting with Starknet","sidebar":"legacy"},"legacy/interacting-with-starknet/scripting":{"id":"legacy/interacting-with-starknet/scripting","title":"Scripting","description":"In order to automate a process that includes protostar operations, you may want to build a script in language of your choice.","sidebar":"legacy"},"legacy/interacting-with-starknet/signing":{"id":"legacy/interacting-with-starknet/signing","title":"Signing","description":"Protostar offers two ways of providing the signature:","sidebar":"legacy"},"legacy/introduction":{"id":"legacy/introduction","title":"Introduction","description":"Protostar is a toolchain for developing Starknet smart contracts that helps with tasks such as dependency management, project compilation, and testing contracts.","sidebar":"legacy"},"legacy/migrations/README":{"id":"legacy/migrations/README","title":"Migrations","description":"Migrations feature has been removed in favour of using json outputs of the commands, and creating the deployment scripts in language of your choice.","sidebar":"legacy"},"legacy/project-initialization":{"id":"legacy/project-initialization","title":"Project initialization","description":"To create a new Protostar project, you will need to run the protostar init command followed by the name of your project. For example:","sidebar":"legacy"},"legacy/testing/cheatcodes/assume":{"id":"legacy/testing/cheatcodes/assume","title":"assume","description":"assume(condition) skips testing against the given example if the condition is False.","sidebar":"legacy"},"legacy/testing/cheatcodes/declare":{"id":"legacy/testing/cheatcodes/declare","title":"declare","description":"Declares contract given a path relative to a Protostar project root.","sidebar":"legacy"},"legacy/testing/cheatcodes/deploy":{"id":"legacy/testing/cheatcodes/deploy","title":"deploy","description":"Deploys contract for deployment given PreparedContract.","sidebar":"legacy"},"legacy/testing/cheatcodes/deploy-contract":{"id":"legacy/testing/cheatcodes/deploy-contract","title":"deploy_contract","description":"Deploys a contract given a path relative to a Protostar project root. The section Deploying contracts from tests demonstrates a usage of this cheatcode.","sidebar":"legacy"},"legacy/testing/cheatcodes/example":{"id":"legacy/testing/cheatcodes/example","title":"example","description":"Parametrizes test with explicitly provided data.","sidebar":"legacy"},"legacy/testing/cheatcodes/expect-call":{"id":"legacy/testing/cheatcodes/expect-call","title":"expect_call","description":"Allows specifying what calls to contracts\' functions are expected in the code.","sidebar":"legacy"},"legacy/testing/cheatcodes/expect-events":{"id":"legacy/testing/cheatcodes/expect-events","title":"expect_events","description":"Compares expected events with events in the Starknet state. You can use this cheatcode to test whether a contract emits specified events. Protostar compares events after a test case is completed. Therefore, you can use this cheatcode in any place within a test case.","sidebar":"legacy"},"legacy/testing/cheatcodes/expect-revert":{"id":"legacy/testing/cheatcodes/expect-revert","title":"expect_revert","description":"If a code beneath expect_revert raises a specified exception, a test will pass. If not, a test will fail.","sidebar":"legacy"},"legacy/testing/cheatcodes/given":{"id":"legacy/testing/cheatcodes/given","title":"given","description":"Instructs the fuzzer to adopt a specific fuzzing strategy for input parameters.","sidebar":"legacy"},"legacy/testing/cheatcodes/load":{"id":"legacy/testing/cheatcodes/load","title":"load","description":"Loads storage variable with name variablename and given key and variabletype from a contract with targetcontractaddress.","sidebar":"legacy"},"legacy/testing/cheatcodes/max-examples":{"id":"legacy/testing/cheatcodes/max-examples","title":"max_examples","description":"Set the maximum number of examples to explore by the fuzzer.","sidebar":"legacy"},"legacy/testing/cheatcodes/mock-call":{"id":"legacy/testing/cheatcodes/mock-call","title":"mock_call","description":"Mocks all calls to function with the name fnname of a contract with an address contractaddress, until the returned callable is called.","sidebar":"legacy"},"legacy/testing/cheatcodes/prepare":{"id":"legacy/testing/cheatcodes/prepare","title":"prepare","description":"Prepares contract for deployment given DeclaredContract and constructor_calldata. The cheatcode is useful when you want to know contract address before deploying it to affect constructor with a targeted cheatcode. Example:","sidebar":"legacy"},"legacy/testing/cheatcodes/README":{"id":"legacy/testing/cheatcodes/README","title":"Cheatcodes","description":"Most of the time, testing smart contracts with assertions only is not enough.","sidebar":"legacy"},"legacy/testing/cheatcodes/reflect":{"id":"legacy/testing/cheatcodes/reflect","title":"reflect","description":"Loads specified a Cairo object into a Python type. reflect is a function that takes in ids and returns Reflector object that behaves simillarly. To retrieve the value use get() method which can return:","sidebar":"legacy"},"legacy/testing/cheatcodes/reject":{"id":"legacy/testing/cheatcodes/reject","title":"reject","description":"reject() skips testing against the given example.","sidebar":"legacy"},"legacy/testing/cheatcodes/roll":{"id":"legacy/testing/cheatcodes/roll","title":"roll","description":"Changes a block number until the returned function is called. If targetcontractaddress is specified, roll affects only the contract with the specified address. Otherwise, roll affects the current contract.","sidebar":"legacy"},"legacy/testing/cheatcodes/send-message-to-l2":{"id":"legacy/testing/cheatcodes/send-message-to-l2","title":"send_message_to_l2","description":"This cheatcode simulates an incoming message from L1 to L2 executed with fnname at toaddress contract address.","sidebar":"legacy"},"legacy/testing/cheatcodes/skip":{"id":"legacy/testing/cheatcodes/skip","title":"skip","description":"Skip a test. You can use this cheatcode to prepare tests for functionality that isn\'t completed yet.","sidebar":"legacy"},"legacy/testing/cheatcodes/start-prank":{"id":"legacy/testing/cheatcodes/start-prank","title":"start_prank","description":"Changes a caller address returned by getcalleraddress() until the returned callable is called. If targetcontractaddress is specified, startprank affects only the contract with the specified address. Otherwise, startprank affects the current contract.","sidebar":"legacy"},"legacy/testing/cheatcodes/store":{"id":"legacy/testing/cheatcodes/store","title":"store","description":"Updates storage variable with name variablename and given key to value of a contract with targetcontract_address.","sidebar":"legacy"},"legacy/testing/cheatcodes/strategy":{"id":"legacy/testing/cheatcodes/strategy","title":"strategy","description":"A [Python namespace] containing constructors of built-in fuzzing strategies.","sidebar":"legacy"},"legacy/testing/cheatcodes/warp":{"id":"legacy/testing/cheatcodes/warp","title":"warp","description":"Changes a block timestamp until the returned function is called. If targetcontractaddress is specified, warp affects only the contract with the specified address. Otherwise, warp affects the current contract.","sidebar":"legacy"},"legacy/testing/deploying-contracts":{"id":"legacy/testing/deploying-contracts","title":"Deploying contracts from tests","description":"For most projects, testing of isolated functions won\'t be enough.","sidebar":"legacy"},"legacy/testing/e2e":{"id":"legacy/testing/e2e","title":"End-to-end tests","description":"There are three main levels of software testing: unit tests, integration tests, and end-to-end tests.","sidebar":"legacy"},"legacy/testing/fuzzing/README":{"id":"legacy/testing/fuzzing/README","title":"Fuzzing","description":"In order to use the fuzzing mode, you have to use the given cheatcode.","sidebar":"legacy"},"legacy/testing/fuzzing/reproducing-failures":{"id":"legacy/testing/fuzzing/reproducing-failures","title":"Reproducing failures","description":"An important aspect of developing code with a fuzz testing suite is how to reproduce failing test","sidebar":"legacy"},"legacy/testing/fuzzing/strategies":{"id":"legacy/testing/fuzzing/strategies","title":"Strategies","description":"Often in code, we operate on some assumptions about the possible values of variables.","sidebar":"legacy"},"legacy/testing/README":{"id":"legacy/testing/README","title":"Testing","description":"Legacy Cairo 0 test runner has been deprecated, and will be removed in future releases.","sidebar":"legacy"}}}')}}]);